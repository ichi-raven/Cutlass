#pragma once

#include <unordered_map>
#include <cstdint>

namespace Cutlass
{
    enum class KeyState
    {
        ePressed,
        eReleased,
        eHeld,
        eNone,
    };

    enum class KeyCode
    {
        KeySpace = 32,
        KeyApostrophe = 39,
        KeyComma = 44,
        KeyMinus = 45,
        KeyPeriod = 46,
        KeySlash = 47,
        Key0 = 48,
        Key1 = 49,
        Key2 = 50,
        Key3 = 51,
        Key4 = 52,
        Key5 = 53,
        Key6 = 54,
        Key7 = 55,
        Key8 = 56,
        Key9 = 57,
        KeySemicolon = 59,
        KeyEqual = 61,
        KeyA = 65,
        KeyB = 66,
        KeyC = 67,
        KeyD = 68,
        KeyE = 69,
        KeyF = 70,
        KeyG = 71,
        KeyH = 72,
        KeyI = 73,
        KeyJ = 74,
        KeyK = 75,
        KeyL = 76,
        KeyM = 77,
        KeyN = 78,
        KeyO = 79,
        KeyP = 80,
        KeyQ = 81,
        KeyR = 82,
        KeyS = 83,
        KeyT = 84,
        KeyU = 85,
        KeyV = 86,
        KeyW = 87,
        KeyX = 88,
        KeyY = 89,
        KeyZ = 90,
        KeyLeftBracket = 91,
        KeyBackSlash = 92,
        KeyRightBracket = 93,
        KeyGraveAccent = 96,
        KeyWorld1 = 161,
        KeyWorld2 = 162,
        KeyEscape = 256,
        KeyEnter = 257,
        KeyTab = 258,
        KeyBackSpace = 259,
        KeyInsert = 260,
        KeyDelete = 261,
        KeyRight = 262,
        KeyLeft = 263,
        KeyDown = 264,
        KeyUp = 265,
        KeyPageUp = 266,
        KeyPageDown = 267,
        KeyHome = 268,
        KeyEnd = 269,
        KeyCapsLock= 280,
        KeyScrollLock = 281,
        KeyNumLock = 282,
        KeyPrintScreen = 283,
        KeyPause = 284,
        KeyF1 = 290,
        KeyF2 = 291,
        KeyF3 = 292,
        KeyF4 = 293,
        KeyF5 = 294,
        KeyF6 = 295,
        KeyF7 = 296,
        KeyF8 = 297,
        KeyF9 = 298,
        KeyF10 = 299,
        KeyF11 = 300,
        KeyF12 = 301,
        KeyF13 = 302,
        KeyF14 = 303,
        KeyF15 = 304,
        KeyF16 = 305,
        KeyF17 = 306,
        KeyF18 = 307,
        KeyF19 = 308,
        KeyF20 = 309,
        KeyF21 = 310,
        KeyF22 = 311,
        KeyF23 = 312,
        KeyF24 = 313,
        KeyF25 = 314,
        KeyKP_0 = 320,
        KeyKP_1 = 321,
        KeyKP_2 = 322,
        KeyKP_3 = 323,
        KeyKP_4 = 324,
        KeyKP_5 = 325,
        KeyKP_6 = 326,
        KeyKP_7 = 327,
        KeyKP_8 = 328,
        KeyKP_9 = 329,
        KeyKP_DECIMAL = 330,
        KeyKP_DIVIDE = 331,
        KeyKP_MULTIPLY = 332,
        KeyKP_SUBTRACT = 333,
        KeyKP_ADD = 334,
        KeyKP_ENTER = 335,
        KeyKP_EQUAL = 336,
        KeyLeftShift = 340,
        KeyLeftControl = 341,
        KeyLeftAlt = 342,
        KeyLeftSuper = 343,
        KeyRightShift = 344,
        KeyRightControl = 345,
        KeyRightAlt = 346,
        KeyRightSuper = 347,
        KeyMenu = 348,
        KeyLAST = KeyMenu
    };

    constexpr uint32_t keyIndex[] =
    {
            32,
            39,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            59,
            61,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            96,
            161,
            162,
            256,
            257,
            258,
            259,
            260,
            261,
            262,
            263,
            264,
            265,
            266,
            267,
            268,
            269,
            280,
            281,
            282,
            283,
            284,
            290,
            291,
            292,
            293,
            294,
            295,
            296,
            297,
            298,
            299,
            300,
            301,
            302,
            303,
            304,
            305,
            306,
            307,
            308,
            309,
            310,
            311,
            312,
            313,
            314,
            320,
            321,
            322,
            323,
            324,
            325,
            326,
            327,
            328,
            329,
            330,
            331,
            332,
            333,
            334,
            335,
            336,
            340,
            341,
            342,
            343,
            344,
            345,
            346,
            347,
            348
    };

    class Event
    {
    public:
        Event();

        KeyState getKeyState(KeyCode key);

        uint32_t getKeyFrame(KeyCode key);

        void getMousePos(double &x, double &y);

        bool windowShouldClose();

        std::unordered_map<KeyCode, uint32_t> &getKeyRefInternal();

        void updateInternal(double mouseX, double mouseY, bool windowShouldClose = false);

    private:
        std::unordered_map<KeyCode, uint32_t> mKeys;
        double mMouseX;
        double mMouseY;
        bool mWindowShouldClose;
    };
};